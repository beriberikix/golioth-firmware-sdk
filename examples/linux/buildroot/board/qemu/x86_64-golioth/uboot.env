# U-Boot environment for Golioth QEMU x86_64 A/B Boot
# A/B partition boot with swupdate support

# A/B boot configuration
boot_slot=a
boot_slot_retry=3
bootdelay=2

# Initialize virtio devices
init_virtio=virtio scan

# A/B boot logic - choose partition based on boot_slot
ab_boot=if test "${boot_slot}" = "a"; then setenv boot_part 2; else setenv boot_part 3; fi; run boot_from_part

# Load kernel from boot partition and boot from selected root partition
boot_from_part=fatload virtio 0:1 ${kernel_addr_r} bzImage; if test "${boot_slot}" = "a"; then setenv bootargs "root=/dev/vdb2 rootwait console=ttyS0,115200"; else setenv bootargs "root=/dev/vdb3 rootwait console=ttyS0,115200"; fi; bootz ${kernel_addr_r}

# Complete boot sequence with A/B support
autoboot=run init_virtio; run ab_boot

# Fallback boot - try direct kernel loading if A/B fails
fallback_boot=load virtio 1 ${kernel_addr_r} bzImage; setenv bootargs "rootwait root=/dev/vda console=ttyS0,115200"; bootz ${kernel_addr_r}

# Main boot command with fallback
bootcmd=run autoboot || run fallback_boot