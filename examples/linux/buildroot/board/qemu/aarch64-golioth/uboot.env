# U-Boot environment for Golioth QEMU ARM64 Single Partition Boot
# Simplified single partition boot with reliable kernel loading

# Memory layout for ARM64 QEMU
kernel_addr_r=0x40080000
fdt_addr_r=0x47000000
ramdisk_addr_r=0x48000000

# Boot configuration
bootdelay=2

# Initialize virtio devices
init_virtio=virtio scan

# Load kernel and DTB from boot partition (partition 1)
load_kernel=fatload virtio 0:1 ${kernel_addr_r} Image

# Load DTB if available, otherwise use built-in
load_dtb=if fatload virtio 0:1 ${fdt_addr_r} qemu-aarch64.dtb; then echo "Using DTB from boot partition"; else echo "Using built-in DTB"; setenv fdt_addr_r ${fdtcontroladdr}; fi

# Set boot arguments for single rootfs partition (partition 2)
set_bootargs=setenv bootargs "root=/dev/vda2 rootwait console=ttyAMA0 rw"

# Complete boot sequence
boot_sequence=run init_virtio; run load_kernel; run load_dtb; run set_bootargs; booti ${kernel_addr_r} - ${fdt_addr_r}

# Fallback boot - try direct kernel loading if main boot fails
fallback_boot=echo "Trying fallback boot..."; fatload virtio 0:1 ${kernel_addr_r} Image; setenv bootargs "rootwait root=/dev/vda2 console=ttyAMA0 rw"; booti ${kernel_addr_r} - ${fdtcontroladdr}

# Main boot command with fallback
bootcmd=run boot_sequence || run fallback_boot

# Environment variables for version tracking
firmware_version=1.0.0
boot_method=single_partition
update_available=0

# SWUpdate integration variables
swupdate_args=
swupdate_file=/tmp/update.swu